// Generated by CoffeeScript 1.7.1
var __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

define(['./helpers'], function() {
  'use strict';
  var Coord, negativePositions;
  negativePositions = ['W', 'S'];
  return Coord = (function() {
    function Coord(degres, minutes, seconds, orientation) {
      this.degres = degres;
      this.minutes = minutes;
      this.seconds = seconds;
      this.orientation = orientation;
    }

    Coord.prototype.equals = function(_arg) {
      var degres, minutes, orientation, seconds;
      degres = _arg.degres, minutes = _arg.minutes, seconds = _arg.seconds, orientation = _arg.orientation;
      return degres === this.degres && minutes === this.minutes && seconds === this.seconds && orientation === this.orientation;
    };

    Coord.lazyval('decimalDegrees', function() {
      var val, _ref;
      val = this.degres + this.minutes / 60 + this.seconds / 3600;
      if (_ref = this.orientation, __indexOf.call(negativePositions, _ref) >= 0) {
        return -val;
      } else {
        return val;
      }
    });

    Coord.parse = function(str) {
      var coord, degres, minutes, orientation, seconds, _ref, _ref1;
      _ref = str.split(' '), coord = _ref[0], orientation = _ref[1];
      _ref1 = coord.split(':').map(function(val) {
        return parseInt(val, 10);
      }), degres = _ref1[0], minutes = _ref1[1], seconds = _ref1[2];
      return new Coord(degres, minutes, seconds, orientation);
    };

    return Coord;

  })();
});
