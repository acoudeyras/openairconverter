// Generated by CoffeeScript 1.7.1
define(['coord'], function(Coord) {
  'use strict';
  describe('parse', function() {
    return it('should parse a coord', function() {
      var coord;
      coord = Coord.parse('44:02:56 N');
      expect(coord.degres).to.equal(44);
      expect(coord.minutes).to.equal(2);
      expect(coord.seconds).to.equal(56);
      return expect(coord.orientation).to.equal('N');
    });
  });
  describe('equals', function() {
    it('should be true if same coord', function() {
      var coord;
      coord = Coord.parse('44:02:56 N');
      return expect(coord.equals(coord)).to.be["true"];
    });
    it('should be true if same coords', function() {
      var coord, coord1;
      coord = Coord.parse('44:02:56 N');
      coord1 = Coord.parse('44:02:56 N');
      return expect(coord.equals(coord1)).to.be["true"];
    });
    return it('should be false if different coords', function() {
      var coord;
      coord = Coord.parse('44:02:56 N');
      expect(coord.equals(Coord.parse('43:02:56 N'))).to.be["false"];
      expect(coord.equals(Coord.parse('44:12:56 N'))).to.be["false"];
      expect(coord.equals(Coord.parse('44:02:57 N'))).to.be["false"];
      return expect(coord.equals(Coord.parse('44:02:56 E'))).to.be["false"];
    });
  });
  return describe('decimalDegrees', function() {
    it('should make a correct latitude conversion', function() {
      var coord;
      coord = Coord.parse('43:02:24 N');
      return expect(coord.decimalDegrees).to.equal(43.04);
    });
    it('should return south latitude with negative value', function() {
      var coord;
      coord = Coord.parse('43:02:24 S');
      return expect(coord.decimalDegrees).to.equal(-43.04);
    });
    it('should make a correct longitude conversion', function() {
      var coord;
      coord = Coord.parse('12:55:12 E');
      return expect(coord.decimalDegrees).to.equal(12.92);
    });
    return it('should return west longitude with negative value', function() {
      var coord;
      coord = Coord.parse('12:55:12 W');
      return expect(coord.decimalDegrees).to.equal(-12.92);
    });
  });
});
